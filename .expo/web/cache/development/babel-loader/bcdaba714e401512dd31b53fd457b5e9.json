{"ast":null,"code":"import Text from \"react-native-web/dist/exports/Text\";\nimport React, { Component } from 'react';\nimport { recipes, categories, ingredients, cities, places } from \"./dataArrays\";\nexport function getCityById(id) {\n  var city;\n  cities.map(function (data) {\n    if (data.id == id) {\n      city = data;\n    }\n  });\n  return city;\n}\nexport function getCityName(id) {\n  var name;\n  cities.map(function (data) {\n    if (data.id == id) {\n      name = data.name;\n    }\n  });\n  return name;\n}\nexport function getPlaces(id) {\n  var placesArray = [];\n  places.map(function (data) {\n    if (data.id == id) {\n      placesArray.push(data);\n    }\n  });\n  return placesArray;\n}\nexport function getNumberOfPlaces(id) {\n  var count = 0;\n  places.map(function (data) {\n    if (data.id == id) {\n      count++;\n    }\n  });\n  return count;\n}\nexport function getPlacesByCityName(cityName) {\n  var nameUpper = cityName.toUpperCase();\n  var placesArray = [];\n  cities.map(function (data) {\n    if (data.name.toUpperCase().includes(nameUpper)) {\n      var _places = getPlaces(data.id);\n\n      _places.map(function (item) {\n        placesArray.push(item);\n      });\n    }\n  });\n  return placesArray;\n}\nexport function getPlacesByPlaceName(placeName) {\n  var nameUpper = placeName.toUpperCase();\n  var placesArray = [];\n  recipes.map(function (data) {\n    if (data.title.toUpperCase().includes(nameUpper)) {\n      placesArray.push(data);\n    }\n  });\n  return placesArray;\n}\nexport function getCategoryById(categoryId) {\n  var category;\n  categories.map(function (data) {\n    if (data.id == categoryId) {\n      category = data;\n    }\n  });\n  return category;\n}\nexport function getCategoryName(categoryId) {\n  var name;\n  categories.map(function (data) {\n    if (data.id == categoryId) {\n      name = data.name;\n    }\n  });\n  return name;\n}\nexport function getRecipes(categoryId) {\n  var recipesArray = [];\n  recipes.map(function (data) {\n    if (data.categoryId == categoryId) {\n      recipesArray.push(data);\n    }\n  });\n  return recipesArray;\n}\nexport function getNumberOfRecipes(categoryId) {\n  var count = 0;\n  recipes.map(function (data) {\n    if (data.categoryId == categoryId) {\n      count++;\n    }\n  });\n  return count;\n}\nexport function getRecipesByCategoryName(categoryName) {\n  var nameUpper = categoryName.toUpperCase();\n  var recipesArray = [];\n  categories.map(function (data) {\n    if (data.name.toUpperCase().includes(nameUpper)) {\n      var _recipes = getRecipes(data.id);\n\n      _recipes.map(function (item) {\n        recipesArray.push(item);\n      });\n    }\n  });\n  return recipesArray;\n}\nexport function getRecipesByRecipeName(recipeName) {\n  var nameUpper = recipeName.toUpperCase();\n  var recipesArray = [];\n  recipes.map(function (data) {\n    if (data.title.toUpperCase().includes(nameUpper)) {\n      recipesArray.push(data);\n    }\n  });\n  return recipesArray;\n}","map":{"version":3,"sources":["E:/Travel-app-final-exam/TravelApp/src/data/MockDataAPI.js"],"names":["React","Component","recipes","categories","ingredients","cities","places","getCityById","id","city","map","data","getCityName","name","getPlaces","placesArray","push","getNumberOfPlaces","count","getPlacesByCityName","cityName","nameUpper","toUpperCase","includes","item","getPlacesByPlaceName","placeName","title","getCategoryById","categoryId","category","getCategoryName","getRecipes","recipesArray","getNumberOfRecipes","getRecipesByCategoryName","categoryName","getRecipesByRecipeName","recipeName"],"mappings":"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","sourcesContent":["import { Text } from 'react-native';\nimport React, { Component } from 'react';\nimport { recipes, categories, ingredients, cities, places } from './dataArrays';\n\n\nexport function getCityById(id){\n  let city;\n  cities.map(data => {\n    if(data.id == id){\n      city = data;\n    }\n  });\n  return city;\n}\n\nexport function getCityName(id) {\n  let name;\n  cities.map(data => {\n    if (data.id == id) {\n      name = data.name;\n    }\n  });\n  return name;\n}\n\nexport function getPlaces(id) {\n  const placesArray = [];\n  places.map(data => {\n    if (data.id == id) {\n      placesArray.push(data);\n    }\n  });\n  return placesArray;\n}\n\nexport function getNumberOfPlaces(id) {\n  let count = 0;\n  places.map(data => {\n    if (data.id == id) {\n      count++;\n    }\n  });\n  return count;\n}\n\nexport function getPlacesByCityName(cityName) {\n  const nameUpper = cityName.toUpperCase();\n  const placesArray = [];\n  cities.map(data => {\n    if (data.name.toUpperCase().includes(nameUpper)) {\n      const places = getPlaces(data.id); // return a vector of recipes\n      places.map(item => {\n        placesArray.push(item);\n      });\n    }\n  });\n  return placesArray;\n}\n\nexport function getPlacesByPlaceName(placeName) {\n  const nameUpper = placeName.toUpperCase();\n  const placesArray = [];\n  recipes.map(data => {\n    if (data.title.toUpperCase().includes(nameUpper)) {\n      placesArray.push(data);\n    }\n  });\n  return placesArray;\n}\n\n\n//===================================================================================================================================================================================\n \nexport function getCategoryById(categoryId) {\n  let category;\n  categories.map(data => {\n    if (data.id == categoryId) {\n      category = data;\n    }\n  });\n  return category;\n}\n\n\nexport function getCategoryName(categoryId) {\n  let name;\n  categories.map(data => {\n    if (data.id == categoryId) {\n      name = data.name;\n    }\n  });\n  return name;\n}\n\nexport function getRecipes(categoryId) {\n  const recipesArray = [];\n  recipes.map(data => {\n    if (data.categoryId == categoryId) {\n      recipesArray.push(data);\n    }\n  });\n  return recipesArray;\n}\n\n\n\nexport function getNumberOfRecipes(categoryId) {\n  let count = 0;\n  recipes.map(data => {\n    if (data.categoryId == categoryId) {\n      count++;\n    }\n  });\n  return count;\n}\n\n\nexport function getRecipesByCategoryName(categoryName) {\n  const nameUpper = categoryName.toUpperCase();\n  const recipesArray = [];\n  categories.map(data => {\n    if (data.name.toUpperCase().includes(nameUpper)) {\n      const recipes = getRecipes(data.id); // return a vector of recipes\n      recipes.map(item => {\n        recipesArray.push(item);\n      });\n    }\n  });\n  return recipesArray;\n}\n\nexport function getRecipesByRecipeName(recipeName) {\n  const nameUpper = recipeName.toUpperCase();\n  const recipesArray = [];\n  recipes.map(data => {\n    if (data.title.toUpperCase().includes(nameUpper)) {\n      recipesArray.push(data);\n    }\n  });\n  return recipesArray;\n}\n"]},"metadata":{},"sourceType":"module"}